{
    "$schema": "https://json.schemastore.org/eslintrc",
    "parserOptions": {
        "ecmaVersion": 2020,
        "sourceType": "module",
        "ecmaFeatures": {
            "impliedStrict": true,
            "jsx": true
        },
        "project": "./tsconfig.json"
    },
    "parser": "@typescript-eslint/parser",
    "plugins": ["@typescript-eslint"],
    "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking"
    ],
    "env": {
        "node": true,
        "jest": true,
        "browser": true,
        "commonjs": true
    },
    "rules": {
        "no-cond-assign": ["error"],
        "no-console": ["error"],
        "no-constant-condition": ["error"],
        "no-control-regex": ["error"],
        "no-debugger": ["error"],
        "no-dupe-args": ["error"],
        "no-dupe-keys": ["error"],
        "no-duplicate-case": ["error"],
        "no-empty-character-class": ["error"],
        "no-empty": ["error"],
        "no-ex-assign": ["error"],
        "no-extra-boolean-cast": ["error"],
        "no-func-assign": ["error"],
        "no-inner-declarations": ["error"],
        "no-invalid-regexp": ["error"],
        "no-irregular-whitespace": ["error"],
        "no-negated-in-lhs": ["error"],
        "no-obj-calls": ["error"],
        "no-regex-spaces": ["error"],
        "no-sparse-arrays": ["error"],
        "no-unexpected-multiline": ["error"],
        "no-unreachable": ["error"],
        "use-isnan": ["error"],
        "valid-jsdoc": ["warn"],
        "valid-typeof": ["error"],
        "array-callback-return": ["error"],
        "block-scoped-var": ["error"],
        "complexity": ["error"],
        "consistent-return": ["error"],
        "curly": ["error"],
        "default-case": ["off"],
        "dot-location": ["error", "property"],
        "eqeqeq": ["error"],
        "guard-for-in": ["error"],
        "no-alert": ["error"],
        "no-caller": ["error"],
        "no-case-declarations": ["error"],
        "no-div-regex": ["error"],
        "no-else-return": ["error"],
        "no-empty-pattern": ["error"],
        "no-eq-null": ["error"],
        "no-eval": ["error"],
        "no-extend-native": ["error"],
        "no-extra-bind": ["error"],
        "no-extra-label": ["error"],
        "no-fallthrough": ["error"],
        "no-floating-decimal": ["error"],
        "no-implicit-coercion": ["error"],
        "no-implicit-globals": ["error"],
        "no-implied-eval": ["error"],
        "no-iterator": ["error"],
        "no-labels": ["error"],
        "no-lone-blocks": ["error"],
        "no-multi-spaces": ["error"],
        "no-multi-str": ["error"],
        "no-native-reassign": ["error"],
        "no-new-func": ["error"],
        "no-new-wrappers": ["error"],
        "no-new": ["error"],
        "no-octal-escape": ["error"],
        "no-octal": ["error"],
        "no-param-reassign": ["error", { "props": true }],
        "no-process-env": ["error"],
        "no-proto": ["error"],
        "no-return-assign": ["error"],
        "no-script-url": ["error"],
        "no-self-assign": ["error"],
        "no-self-compare": ["error"],
        "no-sequences": ["error"],
        "no-unmodified-loop-condition": ["error"],
        "no-unused-labels": ["error"],
        "no-useless-call": ["error"],
        "no-useless-concat": ["error"],
        "no-void": ["error"],
        "no-warning-comments": ["error"],
        "no-with": ["error"],
        "radix": ["error"],
        "vars-on-top": ["error"],
        "wrap-iife": ["error", "outside"],
        "yoda": ["error"],
        "no-catch-shadow": ["error"],
        "no-delete-var": ["error"],
        "no-label-var": ["error"],
        "no-shadow-restricted-names": ["error"],
        "no-undef-init": ["error"],
        "no-undef": ["error"],
        "no-undefined": ["error"],
        "callback-return": ["error"],
        "global-require": ["error"],
        "handle-callback-err": ["error"],
        "no-new-require": ["error"],
        "no-path-concat": ["error"],
        "no-process-exit": ["error"],
        "no-restricted-imports": ["error"],
        "no-restricted-modules": ["error"],
        "no-sync": ["error"],
        "array-bracket-spacing": ["error", "never"],
        "block-spacing": ["error", "always"],
        "comma-style": ["error", "last"],
        "computed-property-spacing": ["error", "never"],
        "consistent-this": ["off"],
        "eol-last": ["error", "unix"],
        "func-names": ["error"],
        "func-style": ["error", "declaration", { "allowArrowFunctions": true }],
        "id-length": [
            "error",
            {
                "min": 3,
                "max": 20
            }
        ],
        "jsx-quotes": ["error", "prefer-single"],
        "key-spacing": ["error", { "beforeColon": false, "afterColon": true }],
        "lines-around-comment": [
            "error",
            {
                "beforeBlockComment": true,
                "afterBlockComment": false,
                "beforeLineComment": true,
                "afterLineComment": false,
                "allowBlockStart": true,
                "allowObjectStart": true,
                "allowArrayStart": true
            }
        ],
        "max-depth": ["error", 5],
        "max-len": [
            "error",
            {
                "code": 80,
                "ignoreUrls": true
            }
        ],
        "max-nested-callbacks": ["error", 3],
        "max-params": ["error", 3],
        "max-statements": ["error", 12],
        "new-cap": ["error"],
        "new-parens": ["error"],
        "newline-after-var": ["error", "always"],
        "newline-per-chained-call": ["error", { "ignoreChainWithDepth": 3 }],
        "no-bitwise": ["error"],
        "no-continue": ["error"],
        "no-inline-comments": ["error"],
        "no-lonely-if": ["error"],
        "no-mixed-spaces-and-tabs": ["error"],
        "no-multiple-empty-lines": [
            "error",
            {
                "max": 2,
                "maxEOF": 0,
                "maxBOF": 0
            }
        ],
        "no-negated-condition": ["error"],
        "no-nested-ternary": ["error"],
        "no-new-object": ["error"],
        "no-plusplus": ["error"],
        "no-restricted-syntax": ["error", "class"],
        "no-whitespace-before-property": ["error"],
        "no-spaced-func": ["error"],
        "no-ternary": ["off"],
        "no-trailing-spaces": ["error"],
        "no-underscore-dangle": ["off"],
        "no-unneeded-ternary": ["error"],
        "object-curly-spacing": ["error", "always"],
        "one-var": ["error", { "const": "never" }],
        "operator-assignment": ["warn", "never"],
        "operator-linebreak": ["error", "before"],
        "padded-blocks": ["error", "never"],
        "quote-props": ["error", "as-needed"],
        "require-jsdoc": ["error"],
        "semi-spacing": ["error", { "before": false, "after": true }],
        "sort-vars": ["error"],
        "sort-imports": ["error"],
        "space-before-blocks": ["error"],
        "space-in-parens": ["error", "never"],
        "space-unary-ops": ["error", { "words": true, "nonwords": false }],
        "spaced-comment": ["error", "always"],
        "wrap-regex": ["error"],
        "arrow-body-style": ["error", "as-needed"],
        "arrow-parens": ["error", "always"],
        "arrow-spacing": ["error", { "before": true, "after": true }],
        "generator-star-spacing": ["error"],
        "no-class-assign": ["error"],
        "no-confusing-arrow": ["warn"],
        "no-const-assign": ["error"],
        "no-new-symbol": ["error"],
        "no-this-before-super": ["error"],
        "no-var": ["error"],
        "prefer-arrow-callback": ["error"],
        "prefer-const": ["error"],
        "prefer-reflect": ["error"],
        "prefer-rest-params": ["error"],
        "prefer-spread": ["error"],
        "prefer-template": ["error"],
        "require-yield": ["error"],
        "template-curly-spacing": ["error", "never"],
        "@typescript-eslint/array-type": [
            "error",
            {
                "default": "array"
            }
        ],
        "@typescript-eslint/ban-ts-comment": [
            "error",
            {
                "ts-expect-error": true,
                "ts-ignore": true,
                "ts-nocheck": true,
                "ts-check": true
            }
        ],
        "@typescript-eslint/consistent-indexed-object-style": [
            "error",
            "index-signature"
        ],
        "@typescript-eslint/consistent-type-assertions": [
            "error",
            {
                "assertionStyle": "as",
                "objectLiteralTypeAssertions": "never"
            }
        ],
        "@typescript-eslint/consistent-type-definitions": ["error", "type"],
        "@typescript-eslint/consistent-type-imports": [
            "error",
            {
                "prefer": "type-imports",
                "disallowTypeAnnotations": true
            }
        ],
        "@typescript-eslint/explicit-function-return-type": [
            "error",
            {
                "allowExpressions": false,
                "allowTypedFunctionExpressions": true,
                "allowHigherOrderFunctions": true,
                "allowDirectConstAssertionInArrowFunctions": false,
                "allowConciseArrowFunctionExpressionsStartingWithVoid": false
            }
        ],
        "@typescript-eslint/explicit-module-boundary-types": [
            "error",
            {
                "allowArgumentsExplicitlyTypedAsAny": true,
                "allowDirectConstAssertionInArrowFunctions": false,
                "allowedNames": [],
                "allowHigherOrderFunctions": true,
                "allowTypedFunctionExpressions": true
            }
        ],
        "@typescript-eslint/member-delimiter-style": [
            "error",
            {
                "multiline": {
                    "delimiter": "semi",
                    "requireLast": true
                },
                "singleline": {
                    "delimiter": "semi",
                    "requireLast": false
                }
            }
        ],
        "@typescript-eslint/member-ordering": ["error"],
        "@typescript-eslint/method-signature-style": ["error", "property"],
        "@typescript-eslint/naming-convention": [
            "error",
            {
                "selector": "default",
                "format": ["strictCamelCase"],
                "leadingUnderscore": "forbid",
                "trailingUnderscore": "forbid"
            },
            {
                "selector": "variable",
                "types": ["boolean", "string", "number", "array"],
                "format": ["strictCamelCase", "UPPER_CASE"],
                "leadingUnderscore": "forbid",
                "trailingUnderscore": "forbid"
            },
            {
                "selector": ["class", "typeAlias", "interface", "enum"],
                "format": ["StrictPascalCase"],
                "leadingUnderscore": "forbid",
                "trailingUnderscore": "forbid"
            },
            {
                "selector": "enumMember",
                "format": ["UPPER_CASE"],
                "leadingUnderscore": "forbid",
                "trailingUnderscore": "forbid"
            },
            {
                "selector": "memberLike",
                "modifiers": ["private"],
                "format": ["strictCamelCase"],
                "leadingUnderscore": "require",
                "trailingUnderscore": "forbid"
            }
        ],
        "@typescript-eslint/no-base-to-string": ["error"],
        "@typescript-eslint/no-confusing-non-null-assertion": ["error"],
        "@typescript-eslint/no-extraneous-class": ["error"],
        "@typescript-eslint/no-floating-promises": ["error"],
        "@typescript-eslint/no-for-in-array": ["error"],
        "@typescript-eslint/no-implicit-any-catch": [
            "error",
            { "allowExplicitAny": true }
        ],
        "@typescript-eslint/no-implied-eval": ["error"],
        "@typescript-eslint/no-inferrable-types": [
            "off",
            {
                "ignoreParameters": false,
                "ignoreProperties": false
            }
        ],
        "@typescript-eslint/no-invalid-void-type": ["error"],
        "@typescript-eslint/no-misused-new": ["error"],
        "@typescript-eslint/no-misused-promises": ["error"],
        "@typescript-eslint/no-namespace": ["error"],
        "@typescript-eslint/no-non-null-asserted-optional-chain": ["error"],
        "@typescript-eslint/no-non-null-assertion": ["error"],
        "@typescript-eslint/no-require-imports": ["error"],
        "@typescript-eslint/no-this-alias": ["error"],
        "@typescript-eslint/no-type-alias": [
            "error",
            {
                "allowAliases": "never",
                "allowCallbacks": "never",
                "allowConditionalTypes": "never",
                "allowConstructors": "never",
                "allowLiterals": "never",
                "allowMappedTypes": "never",
                "allowTupleTypes": "never"
            }
        ],
        "@typescript-eslint/no-unnecessary-boolean-literal-compare": [
            "error",
            {
                "allowComparingNullableBooleansToTrue": true,
                "allowComparingNullableBooleansToFalse": true
            }
        ],
        "@typescript-eslint/no-unnecessary-condition": [
            "error",
            {
                "allowConstantLoopConditions": true,
                "allowRuleToRunWithoutStrictNullChecksIKnowWhatIAmDoing": false
            }
        ],
        "@typescript-eslint/no-unnecessary-qualifier": ["error"],
        "@typescript-eslint/no-unnecessary-type-arguments": ["error"],
        "@typescript-eslint/no-unnecessary-type-assertion": [
            "error",
            { "typesToIgnore": [] }
        ],
        "@typescript-eslint/no-unsafe-assignment": ["error"],
        "@typescript-eslint/no-unsafe-call": ["error"],
        "@typescript-eslint/no-unsafe-member-access": ["error"],
        "@typescript-eslint/no-unsafe-return": ["error"],
        "@typescript-eslint/no-var-requires": ["error"],
        "@typescript-eslint/prefer-as-const": ["error"],
        "@typescript-eslint/prefer-enum-initializers": ["error"],
        "@typescript-eslint/prefer-for-of": ["error"],
        "@typescript-eslint/prefer-function-type": ["error"],
        "@typescript-eslint/prefer-includes": ["error"],
        "@typescript-eslint/prefer-literal-enum-member": ["error"],
        "@typescript-eslint/prefer-nullish-coalescing": [
            "error",
            {
                "ignoreConditionalTests": true,
                "ignoreMixedLogicalExpressions": true
            }
        ],
        "@typescript-eslint/prefer-optional-chain": ["error"],
        "@typescript-eslint/prefer-readonly": ["error"],
        "@typescript-eslint/prefer-readonly-parameter-types": [
            "error",
            {
                "checkParameterProperties": true,
                "ignoreInferredTypes": false
            }
        ],
        "@typescript-eslint/prefer-reduce-type-parameter": ["error"],
        "@typescript-eslint/prefer-regexp-exec": ["error"],
        "@typescript-eslint/prefer-string-starts-ends-with": ["error"],
        "@typescript-eslint/promise-function-async": ["error"],
        "@typescript-eslint/require-array-sort-compare": [
            "error",
            {
                "ignoreStringArrays": false
            }
        ],
        "@typescript-eslint/restrict-plus-operands": [
            "error",
            { "checkCompoundAssignments": true }
        ],
        "@typescript-eslint/restrict-template-expressions": [
            "error",
            {
                "allowNumber": true,
                "allowBoolean": false,
                "allowAny": false,
                "allowNullish": false
            }
        ],
        "@typescript-eslint/strict-boolean-expressions": [
            "error",
            {
                "allowString": true,
                "allowNumber": true,
                "allowNullableObject": true,
                "allowNullableBoolean": false,
                "allowNullableString": false,
                "allowNullableNumber": false,
                "allowAny": false,
                "allowRuleToRunWithoutStrictNullChecksIKnowWhatIAmDoing": false
            }
        ],
        "@typescript-eslint/switch-exhaustiveness-check": ["error"],
        "@typescript-eslint/triple-slash-reference": [
            "error",
            { "path": "never", "types": "never", "lib": "never" }
        ],
        "@typescript-eslint/type-annotation-spacing": ["error"],
        "@typescript-eslint/typedef": [
            "error",
            {
                "arrayDestructuring": true,
                "arrowParameter": true,
                "memberVariableDeclaration": true,
                "objectDestructuring": true,
                "parameter": true,
                "propertyDeclaration": true,
                "variableDeclaration": true,
                "variableDeclarationIgnoreFunction": true
            }
        ],
        "@typescript-eslint/unbound-method": [
            "error",
            { "ignoreStatic": false }
        ],
        "@typescript-eslint/unified-signatures": ["error"],
        "brace-style": "off",
        "@typescript-eslint/brace-style": [
            "error",
            "stroustrup",
            { "allowSingleLine": true }
        ],
        "comma-dangle": "off",
        "@typescript-eslint/comma-dangle": ["error", "always-multiline"],
        "comma-spacing": "off",
        "@typescript-eslint/comma-spacing": ["error"],
        "default-param-last": "off",
        "@typescript-eslint/default-param-last": ["error"],
        "dot-notation": "off",
        "@typescript-eslint/dot-notation": ["error"],
        "func-call-spacing": "off",
        "@typescript-eslint/func-call-spacing": ["error"],
        "indent": "off",
        "@typescript-eslint/indent": ["error"],
        "init-declarations": "off",
        "@typescript-eslint/init-declarations": ["error"],
        "keyword-spacing": "off",
        "@typescript-eslint/keyword-spacing": ["error"],
        "lines-between-class-members": "off",
        "@typescript-eslint/lines-between-class-members": ["error"],
        "no-array-constructor": "off",
        "@typescript-eslint/no-array-constructor": ["error"],
        "no-dupe-class-members": "off",
        "@typescript-eslint/no-dupe-class-members": ["error"],
        "no-duplicate-imports": "off",
        "@typescript-eslint/no-duplicate-imports": ["error"],
        "no-empty-function": "off",
        "@typescript-eslint/no-empty-function": ["error"],
        "no-extra-parens": "off",
        "@typescript-eslint/no-extra-parens": ["error"],
        "no-extra-semi": "off",
        "@typescript-eslint/no-extra-semi": ["error"],
        "no-invalid-this": "off",
        "@typescript-eslint/no-invalid-this": ["error"],
        "no-loop-func": "off",
        "@typescript-eslint/no-loop-func": ["error"],
        "no-loss-of-precision": "off",
        "@typescript-eslint/no-loss-of-precision": ["error"],
        "no-magic-numbers": "off",
        "@typescript-eslint/no-magic-numbers": [
            "error",
            {
                "ignore": [0, 1],
                "ignoreEnums": true,
                "ignoreNumericLiteralTypes": true
            }
        ],
        "no-redeclare": "off",
        "@typescript-eslint/no-redeclare": ["error"],
        "no-shadow": "off",
        "@typescript-eslint/no-shadow": ["error"],
        "no-unused-expressions": "off",
        "@typescript-eslint/no-unused-expressions": ["error"],
        "no-unused-vars": "off",
        "@typescript-eslint/no-unused-vars": ["error"],
        "no-use-before-define": "off",
        "@typescript-eslint/no-use-before-define": ["error"],
        "no-useless-constructor": "off",
        "@typescript-eslint/no-useless-constructor": ["error"],
        "quotes": "off",
        "@typescript-eslint/quotes": ["error", "single"],
        "require-await": "off",
        "@typescript-eslint/require-await": ["error"],
        "no-return-await": "off",
        "@typescript-eslint/return-await": ["error"],
        "semi": "off",
        "@typescript-eslint/semi": ["error"],
        "space-before-function-paren": "off",
        "@typescript-eslint/space-before-function-paren": ["error", "always"],
        "space-infix-ops": ["error", { "int32Hint": false }]
    },
    "overrides": [
        {
            "files": [
                "**/*.test.js",
                "**/*.test.jsx",
                "**/*.test.ts",
                "**/*.test.tsx",
                "**/*.spec.js",
                "**/*.spec.jsx",
                "**/*.spec.ts",
                "**/*.spec.tsx"
            ],
            "rules": { "@typescript-eslint/no-magic-numbers": ["off"] }
        }
    ]
}
